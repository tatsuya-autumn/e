@use "sass:math";

////////////////////
// インナー幅設定
////////////////////
// コンテンツのインナー幅（最も共通の幅が多い部分）
$inner: 1140px;
// ※キャンパス幅ではなくインナーの幅を指す

// 余白
$padding-pc: 25px;
$padding-sp: 20px;
// ※PC時：デザインカンプの余白の幅ではない。PC時は通常25pxで大丈夫！


////////////////////
// フォント設定
////////////////////
$base-font-family: "YuGothic", 'Yu Gothic', sans-serif;
$second-font-family: "UtsukushiFONT";
$en-font: 'DIN Alternate', sans-serif;
$en-deco-font: "futura-medium-bt";
$en-second-font: "Fresca-Regular";

@font-face {
  font-family: "UtsukushiFONT";
  src: url("../font/UtsukushiFONT.otf") format("OpenType"),
    url("../font/02UtsukushiMincho.ttf") format("truetype");
}

@font-face {
  font-family: "DINAlternate-Bold";
  src: url("../font/DINAlternate-Bold.ttf") format("truetype"),

}

@font-face {
  font-family: "futura medium bt.ttf";
  src: url("../font/futura-medium-bt.ttf") format("truetype"),

}

@font-face {
  font-family: "Fresca-Regular";
  src: url("../font/Fresca-Regular.ttf") format("truetype"),

}


// ※検証ツールでしっかり反映されているか確認する

body {
  font-family: $base-font-family;
}

// フォントウェイト
$regular: 300;
$normal: 400;
$bold: 700;

////////////////////
// 色の指定
////////////////////

//色指定（共通性のあるものは出来る限り指定すると良い）
$black: #000;
$white: #fff;
$b-yellow: #D9940E;
$white: #fff;
$main-color: #333333;
$gray: #cccccc;
// $blue: #000;
// $yellow: #000;
$main-background: #ebebeb;
$gold: #a29016;
$font-color-gray: #3d3d3d;
$dark-gray: #292828;
$base-bg: #0B0A4F;
////////////////////
// メディアクエリとブレークポイントの設定
////////////////////

//ブレイクポイント
$breakpoints: (
  sm: 600,
  md: 768,
  lg: 1024,
  xl: 1440,
);


//メディアクエリー
$mediaquerys: (
  sm: "screen and (min-width: #{map-get($breakpoints,'sm')}px)",
  md: "screen and (min-width: #{map-get($breakpoints,'md')}px)",
  lg: "screen and (min-width: #{map-get($breakpoints,'lg')}px)",
  xl: "screen and (min-width: #{map-get($breakpoints,'xl')}px)",
);

// @include mq(){}で書くとブレークポイントが反映される（初期値はmd）
@mixin mq($mediaquery: md) {
  @media #{map-get($mediaquerys, $mediaquery)} {
    @content;
  }
}

// remへの計算式（16pxを基準としている。10pxを基準とする場合は16を10に変更する）
@function rem($pixels) {
  @return math.div($pixels, 16) * 1rem;
}